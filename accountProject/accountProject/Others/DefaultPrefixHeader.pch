

#define kBounds [UIScreen mainScreen].bounds.size
#define kScreenWidth ([UIScreen mainScreen].bounds.size.width)
#define kScreenHeight ([UIScreen mainScreen].bounds.size.height)


#define kApplication        [UIApplication sharedApplication]
#define kKeyWindow          [UIApplication sharedApplication].keyWindow
#define kAppdelegate ((AppDelegate *)[UIApplication sharedApplication].delegate)

#define kUserDefaults       [NSUserDefaults standardUserDefaults]
#define kRootViewController [UIApplication sharedApplication].delegate.window.rootViewController


//手机型号
#define iPhone4S ([UIScreen mainScreen].bounds.size.height == 480)
#define iPhone5S ([UIScreen mainScreen].bounds.size.height == 568)
#define iPhone6S ([UIScreen mainScreen].bounds.size.height == 667)
#define iPhone6pS ([UIScreen mainScreen].bounds.size.height == 736)
#define ISIPHONEX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)

#define HYFNavBarHeight               44.f
#define HYFStatusBarHeight            (ISIPHONEX ? 44.f : 20.f)
#define HYFNavAndStatusHeight         (ISIPHONEX ? 88.f : 64.f)

#define HYFTabBarHeight               49.f
#define HYFTabBarBottomHeight         (ISIPHONEX ? 34.f : 0.f)
#define HYFTabBarAndBottomHeight      (ISIPHONEX ? 49.f+34.f : 49.f)

//输出
#ifdef DEBUG
#define ASLog(...) NSLog(__VA_ARGS__)
#define debugMethod() NSLog(@"%s", __func__)
#else
#define ASLog(...)
#define debugMethod()
#endif

//颜色
#define RGB(r, g, b)             [UIColor colorWithRed:((r) / 255.0) green:((g) / 255.0) blue:((b) / 255.0) alpha:1.0]
#define RGBAlpha(r, g, b, a)     [UIColor colorWithRed:((r) / 255.0) green:((g) / 255.0) blue:((b) / 255.0) alpha:(a)]

#define KClearColor [UIColor clearColor]
#define KWhiteColor [UIColor whiteColor]
#define KBlackColor [UIColor blackColor]
#define KGrayColor [UIColor grayColor]
#define KGray2Color [UIColor lightGrayColor]
#define KBlueColor [UIColor blueColor]
#define KRedColor [UIColor redColor]
#define KSelectColor RGB(28, 213, 199)
#define KNormalColor RGB(159, 159, 159)
#define KNormalBgColor RGB(252, 252, 252)


#define IMAGE_NAMED(name) [UIImage imageNamed:name]

//判断字符串是否为空
#define kStringIsEmpty(str) ([str isKindOfClass:[NSNull class]] || str == nil || [str length] < 1 ? YES : NO )
//判断数组是否为空
#define kArrayIsEmpty(array) (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)
//判断字典是否为空
#define kDictIsEmpty(dic) (dic == nil || [dic isKindOfClass:[NSNull class]] || dic.allKeys == 0)
//判断是否是空对象
#define kObjectIsEmpty(_object) (_object == nil \
|| [_object isKindOfClass:[NSNull class]] \
|| ([_object respondsToSelector:@selector(length)] && [(NSData *)_object length] == 0) \
|| ([_object respondsToSelector:@selector(count)] && [(NSArray *)_object count] == 0))

//存储头像的key值
#define kHeaderImageKey @"HEADERINAGEKEY"

//存储用户信息的key
#define kUserinfoKey @"USERINFOMODELKEY12"

#ifdef DEBUG
#define SLog(format, ...) printf("class: <%p %s:(%d) > method: %s \n%s\n", self, [[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, __PRETTY_FUNCTION__, [[NSString stringWithFormat:(format), ##__VA_ARGS__] UTF8String] )
#else
#define SLog(format, ...)
#endif 
